@use "../../styles/defaultValues";
@use "../../styles/breakpoints";

.projectCard {
  display: flex;

  width: 80%;

  & .col1 {
    width: 80%;

    position: relative;

    cursor: pointer;

    border-radius: 4px;

    overflow: hidden;

    & img {
      width: 100%;
      height: 100%;

      object-fit: cover;

      filter: grayscale(100%);

      transition: filter 200ms ease-in 400ms, scale 400ms ease-in;
    }

    &::after {
      content: "";

      position: absolute;
      top: 0;
      left: 0;

      width: 100%;
      height: 100%;

      background-color: defaultValues.$accent;

      opacity: 0.3;

      transition: opacity 200ms ease-in 450ms;

      pointer-events: none;
    }
  }

  & .col1:hover {
    & img {
      filter: grayscale(0);
      scale: 1.05;
      transition: filter 200ms ease-in, scale 400ms ease-in 200ms;
    }

    &::after {
      opacity: 0;
      transition: opacity 200ms ease-in;
    }
  }

  & .col2 {
    display: flex;
    flex-direction: column;

    justify-content: center;

    gap: 15px;

    width: 50%;

    position: relative;

    text-align: right;
  }

  & .col2 h3 {
    font-size: 28px;
    font-weight: 400;
  }
  xf & .col2 h4 {
    font-weight: 400;
    opacity: 0.5;
  }

  & .col2 .tools,
  & .col2 .externalLinks {
    display: flex;

    list-style: none;
    gap: 15px;
  }

  & .col2 .tools {
    flex-direction: row-reverse;
    color: rgba(0, 0, 0, 0.5);
  }

  & .col2 p {
    color: rgba(0, 0, 0, 0.5);

    font-size: 14px;
  }

  & .sources {
    ---area: 18px;
    display: flex;
    flex-direction: row-reverse;

    justify-content: center;
    align-items: center;

    gap: 15px;

    & li {
      width: var(---area);
      height: var(---area);
    }

    & .externalLinks svg {
      color: rgba(0, 0, 0, 0.5);

      width: var(---area);
      height: var(---area);
    }
  }

  & .col2 .tools li span {
    color: rgba(0, 0, 0, 0.5);

    font-size: 14px;
  }

  & .col2 .tools li svg {
    ---area: 18px;
    color: rgba(0, 0, 0, 0.5);

    width: var(---area);
    height: var(---area);
  }

  & .col2 > .description {
    display: flex;
    flex-direction: column;

    align-items: end;

    gap: 15px;

    background-color: rgb(197, 203, 209);

    position: relative;
    right: 50%;

    border-radius: 4px;

    box-shadow: 2px 2px 5px black;

    line-height: 24px;

    width: 150%;

    padding: 15px;

    transition: box-shadow 200ms ease-in;

    &:hover {
      box-shadow: 2px 2px 10px black;
    }

    & p {
      display: -webkit-box;
      text-overflow: ellipsis;
      font-size: 16px;
      max-height: 200px;

      overflow: hidden;
      text-overflow: ellipsis;
      -webkit-box-orient: vertical;
      line-clamp: 5;
      -webkit-line-clamp: 5;
    }
  }

  & .col2 > .description button {
    padding: 5px 15px;

    width: fit-content;

    background-color: defaultValues.$accent;
    color: aliceblue;

    border: none;
    border-radius: 4px;

    cursor: pointer;

    transition: all 200ms ease-in;

    &:hover,
    &:focus-within {
      background-color: aliceblue;
      color: black;
    }
  }

  &:nth-of-type(odd) {
    flex-direction: row-reverse;

    & .col2 {
      text-align: left;
    }

    & .col2 > .description {
      align-items: start;

      right: 0;
    }

    & .sources {
      flex-direction: row;
    }

    & .tools {
      flex-direction: row;
    }
  }
}

#mobile {
  display: none;
}

@media (max-width: breakpoints.$tablet) {
  #desktop {
    display: none;
  }

  .projectCard {
    & .col1 {
      position: absolute;
      top: 0;
      left: 0;

      width: 100%;
      height: 100%;

      &::after {
        background-color: defaultValues.$accent3;
      }

      &::before {
        content: "";

        position: absolute;
        top: 0;
        left: 0;

        width: 100%;
        height: 100%;

        background-color: black;
      }

      & img {
        opacity: 0.2;
      }
    }

    & .col2 {
      width: 100%;

      color: aliceblue;

      padding: 40px 25px;

      text-align: left;

      & h4 {
        font-weight: 500;
        color: defaultValues.$accent;

        filter: brightness(130%);

        line-height: 24px;
      }

      & p {
        color: aliceblue;
        filter: brightness(70%);

        line-height: 18px;

        display: -webkit-box;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 5;
        line-clamp: 5;
        overflow: hidden;

        & span {
          filter: brightness(160%);
        }
      }

      & .sources,
      & .tools {
        flex-direction: row;
        flex-wrap: wrap;

        justify-content: left;

        & svg {
          color: aliceblue;
          opacity: 0.7;
        }
      }

      & .sources {
        & button {
          background-color: defaultValues.$accent;
          color: aliceblue;

          padding: 10px 15px;

          border-radius: 4px;
          border: none;
        }
      }

      & .tools#mobile {
        display: flex;

        margin-block: 20px;

        color: rgba(255, 255, 255, 0.5);

        & svg {
          color: white;
        }
      }
    }

    &:nth-of-type(odd) {
      & .col2 {
        text-align: left;
      }

      & .col2 > .description {
        align-items: left;

        right: 0;
      }
    }
  }

  #mobile {
    display: block;
  }
}
